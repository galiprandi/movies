{"version":3,"sources":["components/MovieCard.js","components/App.js","index.js"],"names":["MovieCard","props","Movie","title","src","poster_path","overview","date","release_date","srcImage","alt","className","Date","getFullYear","App","useState","query","setQuery","movies","setMovies","querySearchInput","useRef","querySearch","a","length","API_ENDPOINT","orderResultsNyYears","b","fetch","then","response","json","data","results","sort","console","log","useEffect","current","focus","onSubmit","e","preventDefault","queryMovies","id","name","placeholder","value","onChange","target","onFocus","select","ref","type","map","movie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LA6BeA,MA3Bf,SAAmBC,GAAQ,IAAD,EAC0CA,EAAMC,MAAhEC,EADgB,EAChBA,MAAoBC,EADJ,EACTC,YAAkBC,EADT,EACSA,SAAwBC,EADjC,EACmBC,aAErCC,EAAWL,EACb,uCAAyCA,EACzC,gEAEJ,OACE,mCACE,oCACE,kCACE,qBAAKA,IAAKK,EAAUC,IAAKP,MAE3B,0BAASQ,UAAU,UAAnB,UACE,+BACGR,EADH,KACY,IAAIS,KAAKL,GAAMM,cAD3B,OAGA,oCACE,8CACA,4BAAIP,gBCjBD,SAASQ,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEAF,mBAAS,IAFT,mBAErBG,EAFqB,KAEbC,EAFa,KAItBC,EAAmBC,iBAAO,MAJJ,4CAO5B,WAA2BC,GAA3B,iBAAAC,EAAA,2DACMD,EAAYE,OAAS,GAD3B,0FAIQC,EAJR,iHAI6FH,GAErFI,EAAsB,SAACH,EAAGI,GAAJ,OAC1BJ,EAAEf,aAAemB,EAAEnB,aACf,EACAmB,EAAEnB,aAAee,EAAEf,cAClB,EACD,GAXR,SAaeoB,MAAMH,GAChBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAMC,EAAUD,EAAKC,QAAQC,KAAKR,IAAwB,GAC1DP,EAAUc,GACVE,QAAQC,IAAIH,MAlBlB,oFAP4B,sBA6B5B,OAxBAI,qBAAU,kBAAMjB,EAAiBkB,QAAQC,UAAS,IAyBhD,mCACE,iCACE,uBACEC,SAAU,SAACC,GACTA,EAAEC,iBAlCgB,oCAmClBC,CAAY3B,IAHhB,UAME,uBACE4B,GAAG,cACHC,KAAK,cACLC,YAAY,mBACZC,MAAO/B,EACPgC,SAAU,SAACP,GAAD,OAAOxB,EAASwB,EAAEQ,OAAOF,QACnCG,QAAS,SAACT,GAAD,OAAON,QAAQC,IAAIK,EAAEQ,OAAOE,WACrCC,IAAKhC,IAEP,wBAAQiC,KAAK,SAAb,uBAEF,kCACGnC,EAAOoC,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,CAA0BrD,MAAOqD,GAAjBA,EAAMX,SAGjC,6DCtDRY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5C,EAAD,MAEF6C,SAASC,eAAe,W","file":"static/js/main.7d7a3337.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction MovieCard(props) {\n  const { title, poster_path: src, overview, release_date: date } = props.Movie\n\n  const srcImage = src\n    ? \"https://image.tmdb.org/t/p/original/\" + src\n    : \"https://via.placeholder.com/500x750?text=POSTER%20UNAVAILABLE\"\n\n  return (\n    <>\n      <article>\n        <picture>\n          <img src={srcImage} alt={title} />\n        </picture>\n        <section className=\"summary\">\n          <h1>\n            {title} ({new Date(date).getFullYear()})\n          </h1>\n          <details>\n            <summary>Summary</summary>\n            <p>{overview}</p>\n          </details>\n        </section>\n      </article>\n    </>\n  )\n}\n\nexport default MovieCard\n","import React, { useState, useRef, useEffect } from \"react\"\nimport MovieCard from \"./MovieCard\"\n// import \"./App.css\"\n\nexport default function App() {\n  const [query, setQuery] = useState(\"\")\n  const [movies, setMovies] = useState([])\n\n  const querySearchInput = useRef(null)\n  useEffect(() => querySearchInput.current.focus(), [])\n\n  async function queryMovies(querySearch) {\n    if (querySearch.length < 2) return\n\n    const API_KEY = `38d2b879e4e32254577f8d6411c67af4`\n    const API_ENDPOINT = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${querySearch}`\n\n    const orderResultsNyYears = (a, b) =>\n      a.release_date < b.release_date\n        ? 1\n        : b.release_date < a.release_date\n        ? -1\n        : 0\n\n    return await fetch(API_ENDPOINT)\n      .then((response) => response.json())\n      .then((data) => {\n        const results = data.results.sort(orderResultsNyYears) || []\n        setMovies(results)\n        console.log(results)\n      })\n  }\n\n  return (\n    <>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            queryMovies(query)\n          }}\n        >\n          <input\n            id=\"querySearch\"\n            name=\"querySearch\"\n            placeholder=\"Search movies...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            onFocus={(e) => console.log(e.target.select())}\n            ref={querySearchInput}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        <section>\n          {movies.map((movie) => {\n            return <MovieCard key={movie.id} Movie={movie} />\n          })}\n        </section>\n        <p>Power by themoviedb.org</p>\n      </main>\n    </>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}