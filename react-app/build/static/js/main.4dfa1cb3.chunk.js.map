{"version":3,"sources":["components/MovieDetails/index.js","components/MoviePoster/index.js","components/MovieTitleAndYear/index.js","components/MovieCard.js","components/App.js","index.js"],"names":["MovieDetails","overview","MoviePoster","title","poster_path","src","alt","MovieTitleAndYeard","release_date","year","Date","getFullYear","MovieCard","Movie","className","App","useState","query","setQuery","movies","setMovies","querySearchInput","useRef","querySearch","a","length","API_ENDPOINT","orderResultsNyYears","b","fetch","then","response","json","data","results","sort","useEffect","current","focus","onSubmit","e","preventDefault","queryMovies","id","name","placeholder","value","onChange","target","onFocus","select","ref","type","map","movie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAgBeA,MAbf,YAAqC,IAAbC,EAAY,EAAZA,SACtB,OACE,oCACE,8CACA,4BAAIA,QCLK,SAASC,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YACrCC,EAAMD,EACR,uCAAyCA,EACzC,gEACJ,OACE,kCACE,qBAAKC,IAAKA,EAAKC,IAAKH,EAAOA,MAAOA,MCNzB,SAASI,EAAT,GAAsD,IAAxBJ,EAAuB,EAAvBA,MAAOK,EAAgB,EAAhBA,aAC5CC,EAAO,IAAIC,KAAKF,GAAcG,cACpC,OACE,+BACGR,EADH,KACYM,EADZ,OCgBWG,MAhBf,YAA+B,IAAVC,EAAS,EAATA,MAGnB,OACE,mCACE,oCACE,cAACX,EAAD,eAAiBW,IACjB,0BAASC,UAAU,UAAnB,UACE,cAAC,EAAD,eAAuBD,IACvB,cAAC,EAAD,eAAkBA,aCVb,SAASE,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEAF,mBAAS,IAFT,mBAErBG,EAFqB,KAEbC,EAFa,KAItBC,EAAmBC,iBAAO,MAJJ,4CAO5B,WAA2BC,GAA3B,iBAAAC,EAAA,2DACMD,EAAYE,OAAS,GAD3B,0FAIQC,EAJR,iHAI6FH,GAErFI,EAAsB,SAACH,EAAGI,GAAJ,OAC1BJ,EAAEhB,aAAeoB,EAAEpB,aACf,EACAoB,EAAEpB,aAAegB,EAAEhB,cAClB,EACD,GAXR,SAaeqB,MAAMH,GAChBI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAMC,EAAUD,EAAKC,QAAQC,KAAKR,IAAwB,GAC1DP,EAAUc,MAjBhB,oFAP4B,sBA4B5B,OAvBAE,qBAAU,kBAAMf,EAAiBgB,QAAQC,UAAS,IAwBhD,mCACE,iCACE,uBACEC,SAAU,SAACC,GACTA,EAAEC,iBAjCgB,oCAkClBC,CAAYzB,IAHhB,UAME,uBACE0B,GAAG,cACHC,KAAK,cACLC,YAAY,mBACZC,MAAO7B,EACP8B,SAAU,SAACP,GAAD,OAAOtB,EAASsB,EAAEQ,OAAOF,QACnCG,QAAS,SAACT,GAAD,OAAOA,EAAEQ,OAAOE,UACzBC,IAAK9B,IAEP,wBAAQ+B,KAAK,SAAb,uBAEF,kCACGjC,EAAOkC,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,CAA0BzC,MAAOyC,GAAjBA,EAAMX,SAGjC,6DCrDRY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1C,EAAD,MAEF2C,SAASC,eAAe,W","file":"static/js/main.4dfa1cb3.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nfunction MovieDetails({ overview }) {\n  return (\n    <details>\n      <summary>Summary</summary>\n      <p>{overview}</p>\n    </details>\n  )\n}\n\nMovieDetails.propTypes = {\n  overview: PropTypes.string,\n}\n\nexport default MovieDetails\n","import React from \"react\"\n\nexport default function MoviePoster({ title, poster_path }) {\n  const src = poster_path\n    ? \"https://image.tmdb.org/t/p/original/\" + poster_path\n    : \"https://via.placeholder.com/500x750?text=POSTER%20UNAVAILABLE\"\n  return (\n    <picture>\n      <img src={src} alt={title} title={title} />\n    </picture>\n  )\n}\n","import React from \"react\"\n\nexport default function MovieTitleAndYeard({ title, release_date }) {\n  const year = new Date(release_date).getFullYear()\n  return (\n    <h1>\n      {title} ({year})\n    </h1>\n  )\n}\n","import React from \"react\"\nimport MovieDetails from \"./MovieDetails\"\nimport MoviePoster from \"./MoviePoster\"\nimport MovieTitleAndYear from \"./MovieTitleAndYear\"\n\nfunction MovieCard({ Movie }) {\n  // const { title, poster_path: src, overview, release_date: date } = Movie\n\n  return (\n    <>\n      <article>\n        <MoviePoster {...Movie} />\n        <section className=\"summary\">\n          <MovieTitleAndYear {...Movie} />\n          <MovieDetails {...Movie} />\n        </section>\n      </article>\n    </>\n  )\n}\n\nexport default MovieCard\n","import React, { useState, useRef, useEffect } from \"react\"\nimport MovieCard from \"./MovieCard\"\n// import \"./App.css\"\n\nexport default function App() {\n  const [query, setQuery] = useState(\"\")\n  const [movies, setMovies] = useState([])\n\n  const querySearchInput = useRef(null)\n  useEffect(() => querySearchInput.current.focus(), [])\n\n  async function queryMovies(querySearch) {\n    if (querySearch.length < 2) return\n\n    const API_KEY = `38d2b879e4e32254577f8d6411c67af4`\n    const API_ENDPOINT = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${querySearch}`\n\n    const orderResultsNyYears = (a, b) =>\n      a.release_date < b.release_date\n        ? 1\n        : b.release_date < a.release_date\n        ? -1\n        : 0\n\n    return await fetch(API_ENDPOINT)\n      .then((response) => response.json())\n      .then((data) => {\n        const results = data.results.sort(orderResultsNyYears) || []\n        setMovies(results)\n      })\n  }\n\n  return (\n    <>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            queryMovies(query)\n          }}\n        >\n          <input\n            id=\"querySearch\"\n            name=\"querySearch\"\n            placeholder=\"Search movies...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            onFocus={(e) => e.target.select()}\n            ref={querySearchInput}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        <section>\n          {movies.map((movie) => {\n            return <MovieCard key={movie.id} Movie={movie} />\n          })}\n        </section>\n        <p>Power by themoviedb.org</p>\n      </main>\n    </>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}